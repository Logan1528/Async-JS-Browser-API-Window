Q5. List and briefly explain some common Browser APIs available to JavaScript developers.

Sure! Here are some common Browser APIs available to JavaScript developers:

1. **DOM (Document Object Model) API**: This API provides a structured representation 
of HTML documents, allowing JavaScript to interact with and manipulate the document's 
elements, attributes, and styles dynamically.

2. **Fetch API**: The Fetch API provides a modern, promise-based way to make HTTP 
requests from the browser, allowing developers to fetch resources asynchronously.

3. **Web Storage API**: This API allows developers to store key-value pairs 
locally in a user's browser. It includes both sessionStorage (data persists only until 
the browser or tab is closed) and localStorage (data persists even after the browser is 
closed and reopened).

4. **IndexedDB API**: IndexedDB is a low-level API for client-side storage of significant 
amounts of structured data, including files/blobs.

5. **Web Workers API**: This API allows developers to run scripts in background threads,
 enabling concurrent processing without blocking the main thread, thus improving performance 
and responsiveness.

6. **Canvas API**: The Canvas API provides a way for developers to draw graphics, animations,
 and other visual elements dynamically on a webpage using JavaScript.

7. **Web Audio API**: This API provides powerful audio manipulation capabilities, allowing
 developers to create, process, and manipulate audio within the browser.

8. **Geolocation API**: This API enables web applications to access the user's geographical
 location, providing location information based on the device's GPS, Wi-Fi, or cellular data.

9. **Web Speech API**: The Web Speech API enables developers to incorporate speech 
recognition and synthesis capabilities into web applications, allowing users to interact with 
the browser through voice commands.

10. **Intersection Observer API**: This API provides a way to asynchronously observe changes
 in the intersection of a target element with an ancestor element or with a top-level 
document's viewport.

These APIs empower developers to create rich and interactive web applications with enhanced 
functionalities.

